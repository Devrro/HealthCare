{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/doctors-titles/doctors-titles.component.ts","./src/app/components/doctors-titles/doctors-titles.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/constants/urls.ts","./src/app/services/auth.service.ts","./src/app/services/index.ts","./src/app/services/interceptors/auth.interceptor.ts","./src/app/services/is_authenticated.ts","./src/app/services/token-storage.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {SignupComponent} from \"./components/signup/signup.component\";\nimport {MainPageComponent} from \"./components/main-page/main-page.component\";\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'signUp',\n    component: SignupComponent,\n  },\n  {\n    path:'main',\n    component:MainPageComponent,\n  },\n  {\n    path:'**',\n    redirectTo:'main'\n  }\n\n    // children:[\n    //   {path:'login',component:AuthComponent},\n    //   {path:'signIn',component:SignInComponent},\n    //   {\n    //     path:'cars',\n    //     component:CarsComponent,\n    //     canActivate:[LoginGuard],\n    //     children:[\n    //       {path:':id', component:CarDetailsComponent, pathMatch:'full'}\n    //     ]\n    //   },\n    //   {path:'users',component:UsersComponent,canActivate:[LoginGuard]},\n    //   {path:'auto_parks',component:AutoParksComponent,canActivate:[LoginGuard]},\n    // ]\n\n\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"./services\";\nimport {Is_authenticated} from \"./services/is_authenticated\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'health-care';\n\n  constructor(\n    private isAuthToken: AuthService,\n    private isAuthObs: Is_authenticated\n  ) {\n  }\n\n  ngOnInit() {\n    let isAuth:boolean = this.isAuthToken.isAuthorization()\n    this.isAuthObs.userIsLogged.next(isAuth)\n  }\n}\n","<div class=\"main-container min-vh-100\" style=\"padding: 0!important;height: 100vh\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppComponent} from './app.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {LoginComponent} from './components/login/login.component';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {SignupComponent} from './components/signup/signup.component';\nimport {HeaderComponent} from './components/header/header.component';\nimport {MainPageComponent} from './components/main-page/main-page.component';\nimport {DoctorsTitlesComponent} from './components/doctors-titles/doctors-titles.component';\nimport {AuthInterceptor} from \"./services/interceptors/auth.interceptor\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HeaderComponent,\n    MainPageComponent,\n    DoctorsTitlesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-doctors-titles',\n  templateUrl: './doctors-titles.component.html',\n  styleUrls: ['./doctors-titles.component.css']\n})\nexport class DoctorsTitlesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>doctors-titles works!</p>\n","import {Component, OnInit} from '@angular/core';\nimport {Is_authenticated} from \"../../services/is_authenticated\";\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  LoginButton: Boolean = true\n\n  constructor(\n    private isAuth:Is_authenticated\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.isAuth.userIsLogged.subscribe(value => this.LoginButton = !value)\n  }\n}\n","<div class=\"align-content-lg-between\" style=\"width: 100%\">\n  <nav class=\"navbar px-3 navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"['']\">HealthCare</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['#','doctors']\">Doctors</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['network',]\">Our network</a>\n        </li>\n        <li *ngIf=\"LoginButton\" class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['login',]\">Login</a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../../services\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {IAccessTokenInterface} from \"../../models\";\nimport {Router} from \"@angular/router\";\nimport {Is_authenticated} from \"../../services/is_authenticated\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  auth: FormGroup;\n  errMsg: string = \"\"\n  isLoginFailed: boolean = false\n\n\n  constructor(\n    private authService: AuthService,\n    private TokenStorage: TokenStorageService,\n    private Router: Router,\n    private isAuthObs: Is_authenticated\n\n  ) {\n\n\n  }\n\n  ngOnInit(): void {\n    this._createLoginForm()\n\n  }\n\n  _createLoginForm(): void {\n    this.auth = new FormGroup({\n      email: new FormControl('ore.kitto@gmail.com'),\n      password: new FormControl('1111')\n    })\n  }\n\n  LogInOk = () => {\n    this.isAuthObs.userIsLogged.next(true)\n    this.isLoginFailed = false\n  }\n  LogInFailed = (err: string) => {\n    this.errMsg = err\n    setTimeout(() => {\n      this.errMsg = ''\n    }, 3000)\n    this.isLoginFailed = true\n  }\n\n  _login(): void {\n\n    const tokenStorage = this.TokenStorage;\n    const LogInFailed = this.LogInFailed;\n    const LogInOk = this.LogInOk;\n    let router: Router;\n    router = this.Router;\n\n    this.authService.login(this.auth.getRawValue()).subscribe({\n      next(token: IAccessTokenInterface) {\n        tokenStorage.saveTokens(token)\n        LogInOk()\n        router.navigate(['main']).then(()=>{})\n      },\n      error(err: { error: { detail: string; }; }) {\n        LogInFailed(err.error.detail);\n      }\n    })\n  }\n}\n","<div class=\"container-md text-center align-middle align-items-center\" style=\"height: 80vh\">\n  <div class=\"row justify-content-md-center align-items-center\" style=\"height: 80%\">\n    <form class=\"col col-2\" [formGroup]=\"auth\" (ngSubmit)=\"_login()\">\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" formControlName=\"email\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n      </div>\n      <button type=\"submit\" class =\"btn btn-primary align-self-auto\">Submit</button>\n    </form>\n  </div>\n  <div class=\"row no-select\" style=\"height: 10%\">\n    <p *ngIf=\"errMsg\">{{errMsg}}</p>\n  </div>\n  <div class=\"row justify-content-center \">\n    <div class=\"bg-white bg-opacity-75 py-2 mx-2 col-4 rounded-5\">\n      <h6 style=\"font-weight: bold\">Don`t have an account yet? Sign up <a class=\"text-info\" [routerLink]=\"['../signUp']\">here!</a></h6>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>main-page works!</p>\n","import { Component, OnInit } from '@angular/core';\n// import {SignUpService} from \"../../services/sign-up.service\";\n// import {Router} from \"@angular/router\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  signUp:FormGroup\n\n  constructor(\n    // private SignUpService:SignUpService,\n    // private Router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this._createSignUpForm()\n  }\n\n  _createSignUpForm(): void {\n    this.signUp = new FormGroup({\n      email: new FormControl('ore.kitto@gmail.com'),\n      password: new FormControl('BigTown2033'),\n      first_name: new FormControl(),\n      last_name: new FormControl(),\n      phone_number: new FormControl(),\n      age: new FormControl(),\n    })\n  }\n\n  _SignUp(){\n    console.log(this.signUp.getRawValue());\n  }\n\n}\n","<div class=\"container-md text-center align-middle align-items-center\" style=\"height: 80vh\">\n  <div class=\"row justify-content-md-center align-items-center\" style=\"height: 80%\">\n    <form class=\"col col-2\" [formGroup]=\"signUp\" (ngSubmit)=\"_SignUp()\">\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" formControlName=\"email\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"firstName\" class=\"form-label\">First name</label>\n        <input type=\"password\" class=\"form-control\" id=\"firstName\" formControlName=\"first_name\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"lastName\" class=\"form-label\">Last name</label>\n        <input type=\"password\" class=\"form-control\" id=\"lastName\" formControlName=\"last_name\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"age\" class=\"form-label\">Age</label>\n        <input type=\"password\" class=\"form-control\" id=\"age\" formControlName=\"age\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"phoneNumber\" class=\"form-label\">Phone number</label>\n        <input type=\"password\" class=\"form-control\" id=\"phoneNumber\" formControlName=\"phone_number\">\n      </div>\n      <button type=\"submit\" class =\"btn btn-primary align-self-auto\">Submit</button>\n    </form>\n  </div>\n<!--  <div class=\"row no-select\" style=\"height: 10%\">-->\n<!--    <p *ngIf=\"errMsg\">{{errMsg}}</p>-->\n<!--  </div>-->\n</div>\n","import {environment} from \"../../environments/environment\";\r\n\r\n\r\nconst {URL} = environment;\r\n\r\n\r\nexport const urls={\r\n  login:`${URL}/auth/token`,\r\n  refresh:`${URL}/auth/refresh`,\r\n  users:`${URL}/users`,\r\n  signIn:`${URL}/users/add_user`,\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, tap} from \"rxjs\";\nimport {IAccessTokenInterface} from \"../models\";\nimport {urls} from \"../constants/urls\";\nimport {IUser} from \"../models\";\nimport {TokenStorageService} from \"./token-storage.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  ACCESS_TOKEN = 'auth-token'\n\n  // REFRESH_TOKEN = 'refresh-token'\n\n  constructor(\n    private httpClient: HttpClient,\n    private tokenStorage: TokenStorageService,\n  ) {\n  }\n\n\n\n  login(user: IUser): Observable<IAccessTokenInterface> {\n    return this.httpClient.post<IAccessTokenInterface>(`${urls.login}`, user)\n  }\n\n  register(credentials: {}): Observable<null> {\n    return this.httpClient.post<null>(`${urls.users}`, {...credentials})\n  }\n\n  refreshToken(): Observable<IAccessTokenInterface> {\n    const refresh = this.tokenStorage.getRefreshToken();\n    return this.httpClient.post<IAccessTokenInterface>(`${urls.login}/refresh`, {refresh}).pipe(\n      tap((tokens: IAccessTokenInterface) => {\n        this.tokenStorage.saveTokens(tokens)\n\n      })\n    )\n  }\n\n  isAuthorization(): boolean {\n    return !!window.sessionStorage.getItem(this.ACCESS_TOKEN)\n  }\n}\n","export * from './auth.service'\r\n","import {Injectable} from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor, HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError , Observable, switchMap, throwError} from 'rxjs';\nimport {TokenStorageService} from \"../token-storage.service\";\nimport {AuthService} from \"../auth.service\";\nimport {Router} from \"@angular/router\";\nimport {IAccessTokenInterface} from \"../../models\";\nimport {Is_authenticated} from \"../is_authenticated\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n\n  isRefreshing = false\n\n  constructor(\n    private authService: AuthService,\n    private tokenStorage: TokenStorageService,\n    private router: Router,\n    private is_Auth_obs: Is_authenticated\n  ) {\n  }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const isAuth = this.authService.isAuthorization()\n\n    if (isAuth) {\n      request = this.addToken(request, this.tokenStorage.getAccessToken())\n      this.is_Auth_obs.userIsLogged.next(true)\n      console.log(this.is_Auth_obs.userIsLogged.value)\n    }else{\n      this.router.navigate(['login']).then()\n    }\n    return next.handle(request).pipe(\n\n      catchError((res: HttpErrorResponse) => {\n        if (res && res.error && res.status === 401) {\n          return this.handle401Error(request, next)\n        }\n        return throwError(() => {\n          new Error('Token is expired')\n          this.is_Auth_obs.userIsLogged.next(false)\n          console.log(this.is_Auth_obs.userIsLogged.value)\n          // this.router.navigate(['login']).then()\n        })\n      })\n    ) as any;\n  }\n\n  addToken(request: HttpRequest<any>, token: string): HttpRequest<any> {\n    return request.clone({\n      setHeaders: {Authorization: `Bearer ${token}`}\n    })\n  }\n\n  handle401Error(request: HttpRequest<any>, next: HttpHandler): any {\n    if (!this.isRefreshing) {\n      this.isRefreshing = true;\n      return this.authService.refreshToken().pipe(\n        switchMap((tokens: IAccessTokenInterface) => {\n          return next.handle(this.addToken(request, tokens.access))\n        }),\n        catchError(() => {\n          this.isRefreshing = false\n          this.tokenStorage.signOut();\n          this.router.navigate(['login']).then()\n          return throwError(() => new Error('token invalid or expired'))\n        })\n      )\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Is_authenticated {\n\n  userIsLogged = new BehaviorSubject(false)\n\n  constructor() {\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {IAccessTokenInterface} from \"../models\";\nimport {environment} from \"../../environments/environment\";\n\nconst ACCESS_TOKEN = environment.ACCESS_TOKEN\nconst REFRESH_TOKEN = environment.REFRESH_TOKEN\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() {\n  }\n\n  signOut(): void {\n    window.sessionStorage.clear()\n  }\n\n  public saveTokens(token:IAccessTokenInterface):void{\n    window.sessionStorage.removeItem(ACCESS_TOKEN)\n    window.sessionStorage.removeItem(REFRESH_TOKEN)\n    window.sessionStorage.setItem(ACCESS_TOKEN, token.access)\n    window.sessionStorage.setItem(REFRESH_TOKEN, token.refresh)\n  }\n\n  public getAccessToken():string{\n    return window.sessionStorage.getItem(ACCESS_TOKEN) as string\n  }\n  public getRefreshToken():string{\n    return window.sessionStorage.getItem(REFRESH_TOKEN) as string\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  URL: '/api',\n  ACCESS_TOKEN : 'auth-token',\n  REFRESH_TOKEN : 'refresh-token',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}