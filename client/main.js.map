{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/doctors-titles/add-doctor/add-doctor.component.ts","./src/app/components/doctors-titles/add-doctor/add-doctor.component.html","./src/app/components/doctors-titles/doctor-table-row/doctor-table-row.component.ts","./src/app/components/doctors-titles/doctor-table-row/doctor-table-row.component.html","./src/app/components/doctors-titles/doctor/doctor.component.ts","./src/app/components/doctors-titles/doctors.component.ts","./src/app/components/doctors-titles/doctors.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/main-page/main-page.component.ts","./src/app/components/main-page/main-page.component.html","./src/app/components/modal-window/modal-window.component.ts","./src/app/components/modal-window/modal-window.component.html","./src/app/components/search-bar/search-bar.component.ts","./src/app/components/search-bar/search-bar.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/signup/signup.component.html","./src/app/constants/base_urls.ts","./src/app/constants/site_datas.ts","./src/app/services/auth.service.ts","./src/app/services/doctors.service.ts","./src/app/services/index.ts","./src/app/services/interceptors/auth.interceptor.ts","./src/app/services/is_authenticated.ts","./src/app/services/token-storage.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from \"./components/login/login.component\";\r\nimport {SignupComponent} from \"./components/signup/signup.component\";\r\nimport {MainPageComponent} from \"./components/main-page/main-page.component\";\r\nimport {DoctorsComponent} from \"./components/doctors-titles/doctors.component\";\r\nimport {DoctorComponent} from \"./components/doctors-titles/doctor/doctor.component\";\r\nimport {AddDoctorComponent} from \"./components/doctors-titles/add-doctor/add-doctor.component\";\r\n\r\nconst routes: Routes = [\r\n  // {path: 'main', component: MainPageComponent,},\r\n  {path: 'login', component: LoginComponent,},\r\n  {path: 'signUp', component: SignupComponent,},\r\n  {\r\n    path: 'doctors', component: DoctorsComponent,\r\n    children: [\r\n      {path: 'add_doctor', component: AddDoctorComponent},\r\n      {path: ':id', component: DoctorComponent, children: []},\r\n    ],\r\n  },\r\n\r\n  {path: '**', redirectTo: 'doctors'},\r\n]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {AuthService} from \"./services\";\nimport {Is_authenticated} from \"./services/is_authenticated\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'health-care';\n\n  constructor(\n    private isAuthToken: AuthService,\n    private isAuthObs: Is_authenticated\n  ) {\n  }\n\n  ngOnInit() {\n    let isAuth:boolean = this.isAuthToken.isAuthorization()\n    this.isAuthObs.userIsLogged.next(isAuth)\n  }\n}\n","<div class=\"main-container d-flex flex-column\" style=\"height: 100vh\">\n  <app-header></app-header>\n  <router-outlet></router-outlet>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {NgbDropdown, NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {LoginComponent} from './components/login/login.component';\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\r\nimport {AppRoutingModule} from \"./app-routing.module\";\r\nimport {SignupComponent} from './components/signup/signup.component';\r\nimport {HeaderComponent} from './components/header/header.component';\r\nimport {MainPageComponent} from './components/main-page/main-page.component';\r\nimport {DoctorsComponent} from './components/doctors-titles/doctors.component';\r\nimport {AuthInterceptor} from \"./services/interceptors/auth.interceptor\";\r\nimport {DoctorComponent} from './components/doctors-titles/doctor/doctor.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\r\nimport {AddDoctorComponent} from './components/doctors-titles/add-doctor/add-doctor.component';\r\nimport {DoctorTableRowComponent} from './components/doctors-titles/doctor-table-row/doctor-table-row.component';\r\nimport { ModalWindowComponent } from './components/modal-window/modal-window.component';\r\nimport { SearchBarComponent } from './components/search-bar/search-bar.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    HeaderComponent,\r\n    MainPageComponent,\r\n    DoctorsComponent,\r\n    DoctorComponent,\r\n    AddDoctorComponent,\r\n    DoctorTableRowComponent,\r\n    ModalWindowComponent,\r\n    SearchBarComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    NgbModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatPaginatorModule,\r\n    FormsModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthInterceptor,\r\n      multi: true,\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Component, ErrorHandler, OnInit} from '@angular/core';\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {DoctorsService} from \"../../../services/doctors.service\";\r\n\r\n@Component({\r\n  selector: 'app-add-doctor',\r\n  templateUrl: './add-doctor.component.html',\r\n  styleUrls: ['./add-doctor.component.css'],\r\n  host:{\r\n    class:'display-contents'\r\n  }\r\n})\r\nexport class AddDoctorComponent implements OnInit {\r\n\r\n  _DoctorFromUser:FormGroup\r\n\r\n  _userId:number;\r\n  _errors:any = {};\r\n\r\n  constructor(\r\n    private doctorService:DoctorsService,\r\n    private errorHandler: ErrorHandler\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  this._DoctorFromUser = new FormGroup({\r\n    userId: new FormControl()\r\n  })\r\n\r\n  }\r\n  _addDoctor():void{\r\n    const userId = this._DoctorFromUser.getRawValue().userId\r\n    this.doctorService.addToDoctors(userId).subscribe(value =>{\r\n          this.errorHandler.handleError(this._DoctorFromUser)\r\n    })\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"_DoctorFromUser\" (ngSubmit)=\"_addDoctor()\">\r\n  <div class=\"mb-3\">\r\n    <div class=\"row\">\r\n      <div class=\"col d-flex flex-column gap-2\">\r\n        <label for=\"UserID\">User ID</label>\r\n        <app-search-bar class=\"form-control\"></app-search-bar>\r\n        <div class=\"align-self-end\">\r\n          <button [disabled]=\"!_userId\" class=\"btn btn-outline-secondary\" type=\"submit\">Add to doctors</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"input-group\">\r\n  </div>\r\n</form>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {IUser_Object} from \"../../../models/IUser_Object\";\nimport {DoctorsService} from \"../../../services/doctors.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-doctor-table-row',\n  templateUrl: './doctor-table-row.component.html',\n  styleUrls: ['./doctor-table-row.component.css'],\n    host: {\n    class: 'display-contents'\n  }\n})\nexport class DoctorTableRowComponent implements OnInit {\n\n  @Input()\n  doctor: IUser_Object\n\n  _img_src: string = ''\n\n\n  constructor(\n    private DoctorService: DoctorsService,\n    private AC: ActivatedRoute\n  ) {\n  }\n\n  ngOnInit(): void {\n    this._img_src = this.doctor.profile.profile_picture ? this.doctor.profile.profile_picture : './assets/images/alert/alert_wip.png'\n    // this.AC.params.subscribe(value =>\n    //   this.DoctorService.getDoctorByID(value['id']).subscribe(value=>{\n    //     this.doctor = value.results[0]\n    //   })\n    // )\n  }\n\n  _nav(id: number) {\n    this.DoctorService.docInfo.next(this.doctor)\n  }\n\n  _deleteDoctor(id: number) {\n    this.DoctorService.deleteDoctorNum.next(id)\n  }\n\n}\n","<tr class=\"d-lg-table-row\">\n  <td class=\"table-margin-5 X\">{{doctor.id}}</td>\n  <td class=\"table-margin-5\">\n    <h5 class=\"font-medium mb-0\">{{doctor.profile.first_name}} {{doctor.profile.last_name}}</h5>\n  </td>\n  <td class=\"table-margin-5\">\n    <span class=\"text-muted\">{{doctor.email}}</span><br>\n    <span class=\"text-muted\">{{doctor.profile.phone_number}}</span>\n  </td>\n  <td class=\"table-margin-5\">\n    <span class=\"text-muted\">{{doctor.created_at}}</span><br>\n  </td>\n  <td class=\"table-margin-5\">\n    <button type=\"button\" class=\"btn btn-outline-info btn-circle btn-lg btn-circle ml-2 mx-1\" disabled><i class=\"fa fa-key\"></i></button>\n    <button  type=\"button\" class=\"btn btn-outline-danger btn-circle btn-lg btn-circle ml-2 mx-1\" ><i class=\"fa fa-trash\" style=\"\"></i></button>\n    <button  type=\"button\" class=\"btn btn-outline-info btn-circle btn-lg btn-circle ml-2 mx-1\" disabled><i class=\"fa fa-edit\"></i></button>\n    <button  type=\"button\" class=\"btn btn-outline-info btn-circle btn-lg btn-circle ml-2 mx-1\" disabled><i class=\"fa fa-upload\"></i></button>\n  </td>\n</tr>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {IUser_Object} from \"../../../models/IUser_Object\";\nimport {DoctorsService} from \"../../../services/doctors.service\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n  selector: 'app-doctor',\n  templateUrl: './doctor.component.html',\n  styleUrls: ['./doctor.component.css'],\n\n})\nexport class DoctorComponent implements OnInit {\n\n  @Input()\n  doctor: IUser_Object\n\n  _img_src: string = ''\n\n\n  constructor(\n\n  ) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","import {Component, HostListener, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {DoctorsService} from \"../../services/doctors.service\";\r\nimport {IUser_Object} from \"../../models/IUser_Object\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {base_constants} from \"../../constants/site_datas\";\r\nimport {MatPaginator, PageEvent} from \"@angular/material/paginator\";\r\nimport {$e} from \"@angular/compiler/src/chars\";\r\nimport {UserService} from \"../../services/user.service\";\r\n@Component({\r\n  selector: 'app-doctors',\r\n  templateUrl: './doctors.component.html',\r\n  styleUrls: ['./doctors.component.css']\r\n})\r\nexport class DoctorsComponent implements OnInit {\r\n\r\n  @ViewChild(MatPaginator) paginator:MatPaginator;\r\n\r\n  @Input()\r\n  doctors: IUser_Object[] = []\r\n  _render_details: boolean = false\r\n  _page_size: number = base_constants.page_size\r\n  _page_count = 0\r\n  constructor(\r\n    private DoctorService: DoctorsService,\r\n    private UserService: UserService,\r\n    private router: Router,\r\n    private AC: ActivatedRoute,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.AC.queryParams.subscribe(value => {\r\n      this._page_size =  value['page_size']\r\n      this.DoctorService.getAllDoctors(this._page_size).subscribe(data => {\r\n       this._page_count = Math.ceil(data.count/this._page_size);\r\n       this.paginator.getNumberOfPages()\r\n        this.doctors = data.results;\r\n      })\r\n    })\r\n    this.DoctorService.deleteDoctorNum.subscribe(docId => {\r\n      this.DoctorService.deleteDoctorById(docId)\r\n      this.doctors = this.doctors.filter(value => value.id !== docId)\r\n    })\r\n    this._render_details = false\r\n  }\r\n\r\n\r\n  // Check filtering (add_doctor_with_search_bar)\r\n  getUsersToDoctorList(searchingParams:{}):void{\r\n    this.UserService.getUsersIdPairs(searchingParams).subscribe()\r\n  }\r\n\r\n  handlePage($event:PageEvent) {\r\n    this._page_size = $event.pageSize\r\n    this.router.navigate(['.'],{queryParams:{page_size:$event.pageSize},relativeTo:this.AC}, ).then()\r\n  }\r\n}\r\n","<div class=\"container bg-white px-5 py-5 mt-5 rounded-2\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <app-modal-window\r\n        [_redirectTo]=\"'add_doctor'\"\r\n        [_backUrl]=\"'doctors'\"\r\n        [_description]=\"'Add a doctor'\"\r\n        [_headerText]=\"'Add doctor from users'\">\r\n      </app-modal-window>\r\n    </div>\r\n    <app-search-bar></app-search-bar>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"d-flex  justify-content-between\">\r\n        <div class=\"align-items-center d-flex gap-2\">\r\n\r\n<!--          <a-->\r\n<!--            class=\"btn btn-primary\" [routerLink]=\"['./','add_doctor']\">Add doctor-->\r\n<!--            <i class=\"fa fa-user\">-->\r\n<!--            </i>-->\r\n<!--          </a>-->\r\n        </div>\r\n        <mat-paginator\r\n          #paginator\r\n          [length]=\"_page_count\"\r\n          [pageSize]=\"_page_size\"\r\n          [pageSizeOptions]=\"[5,10,25,50]\"\r\n          (page)=\"handlePage($event)\"\r\n        ></mat-paginator>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title text-uppercase mb-0\">Manage Users</h5>\r\n        </div>\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table no-wrap user-table mb-0\">\r\n            <thead>\r\n            <tr>\r\n              <th scope=\"col\" class=\"border-0 text-uppercase font-medium text-center pl-4\" style=\"width: 10%\">#</th>\r\n              <th scope=\"col\" class=\"border-0 text-uppercase font-medium text-center\" style=\"width: 20%\">Name</th>\r\n              <th scope=\"col\" class=\"border-0 text-uppercase font-medium text-center\" style=\"width: 20%\">Email</th>\r\n              <th scope=\"col\" class=\"border-0 text-uppercase font-medium text-center\" style=\"width: 20%\">Added</th>\r\n              <th scope=\"col\" class=\"border-0 text-uppercase font-medium text-center\" style=\"width: 20%\">Manage</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <app-doctor-table-row *ngFor=\"let doc of doctors\" [doctor]=\"doc\"></app-doctor-table-row>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Is_authenticated} from \"../../services/is_authenticated\";\r\nimport {TokenStorageService} from \"../../services/token-storage.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  LoginButton: Boolean = true\r\n\r\n  constructor(\r\n    private isAuth:Is_authenticated,\r\n    private TokenStorage:TokenStorageService,\r\n    private router:Router,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.isAuth.userIsLogged.subscribe(value => this.LoginButton = !value)\r\n  }\r\n  _logOut(){\r\n    this.TokenStorage.signOut()\r\n    this.router.navigate(['login']).then()\r\n    this.isAuth.userIsLogged.next(false)\r\n  }\r\n}\r\n","<div class=\"\" style=\"width: 100%;\">\n  <nav class=\"navbar px-3 navbar-expand-lg navbar-light bg-light\" style=\"height: 5vh;\">\n    <a class=\"navbar-brand\" [routerLink]=\"['']\">HealthCare</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['doctors']\">Doctors</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['network',]\">Our network</a>\n        </li>\n        <li *ngIf=\"LoginButton\" class=\"nav-item\">\n          <a class=\"nav-link\" [routerLink]=\"['login',]\">Login</a>\n        </li>\n        <li *ngIf=\"!LoginButton\" class=\"nav-item\">\n          <a class=\"nav-link\" (click)=\"_logOut()\" [routerLink]=\"['main',]\">Log out</a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {AuthService} from \"../../services\";\nimport {TokenStorageService} from \"../../services/token-storage.service\";\nimport {IAccessTokenInterface} from \"../../models\";\nimport {Router} from \"@angular/router\";\nimport {Is_authenticated} from \"../../services/is_authenticated\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  auth: FormGroup;\n  errMsg: string = \"\"\n  isLoginFailed: boolean = false\n\n\n  constructor(\n    private authService: AuthService,\n    private TokenStorage: TokenStorageService,\n    private Router: Router,\n    private isAuthObs: Is_authenticated\n\n  ) {\n\n\n  }\n\n  ngOnInit(): void {\n    this._createLoginForm()\n\n  }\n\n  _createLoginForm(): void {\n    this.auth = new FormGroup({\n      email: new FormControl('ore.kitto@gmail.com'),\n      password: new FormControl('1111')\n    })\n  }\n\n  LogInOk = () => {\n    this.isAuthObs.userIsLogged.next(true)\n    this.isLoginFailed = false\n  }\n  LogInFailed = (err: string) => {\n    this.errMsg = err\n    setTimeout(() => {\n      this.errMsg = ''\n    }, 3000)\n    this.isLoginFailed = true\n  }\n\n  _login(): void {\n\n    const tokenStorage = this.TokenStorage;\n    const LogInFailed = this.LogInFailed;\n    const LogInOk = this.LogInOk;\n    let router: Router;\n    router = this.Router;\n\n    this.authService.login(this.auth.getRawValue()).subscribe({\n      next(token: IAccessTokenInterface) {\n        tokenStorage.saveTokens(token)\n        LogInOk()\n        router.navigate(['main']).then(()=>{})\n      },\n      error(err: { error: { detail: string; }; }) {\n        LogInFailed(err.error.detail);\n      }\n    })\n  }\n}\n","<div class=\"container-md text-center align-middle align-items-center\" style=\"height: 80vh\">\n  <div class=\"row justify-content-md-center align-items-center\" style=\"height: 80%\">\n    <form class=\"col col-2\" [formGroup]=\"auth\" (ngSubmit)=\"_login()\">\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" formControlName=\"email\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n      </div>\n      <button type=\"submit\" class =\"btn btn-primary align-self-auto\">Submit</button>\n    </form>\n  </div>\n  <div class=\"row no-select\" style=\"height: 10%\">\n    <p *ngIf=\"errMsg\">{{errMsg}}</p>\n  </div>\n  <div class=\"row justify-content-center \">\n    <div class=\"bg-white bg-opacity-75 py-2 mx-2 col-4 rounded-5\">\n      <h6 style=\"font-weight: bold\">Don`t have an account yet? Sign up <a class=\"text-info\" [routerLink]=\"['../signUp']\">here!</a></h6>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.css']\n})\nexport class MainPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\"> Welcome to base student project HealthCare</div>\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-modal-window',\r\n  templateUrl: './modal-window.component.html',\r\n  styleUrls: ['./modal-window.component.css']\r\n})\r\nexport class ModalWindowComponent implements OnInit {\r\n\r\n  closeResult = '';\r\n\r\n  @Input()\r\n  _redirectTo: string = ''\r\n  @Input()\r\n  _headerText: string = ''\r\n  @Input()\r\n  _description: string = ''\r\n  @Input()\r\n  _backUrl: string = ''\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private router: Router,\r\n    private AC: ActivatedRoute,\r\n  ) {\r\n  }\r\n\r\n  open(content: any) {\r\n    this.router.navigate([`${this._redirectTo}`],{relativeTo:this.AC,queryParamsHandling:\"preserve\"}).then(() => {\r\n      this.modalService.open(content, {ariaLabelledBy: 'modal-basic-title',windowClass:\"basicModal\"}).result.then((result) => {\r\n        this.closeResult = `Closed with: ${result}`;\r\n        this._back()\r\n      }, (reason) => {\r\n        this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\r\n        this._back()\r\n      });\r\n    })\r\n  }\r\n\r\n  _back():void{\r\n    this.router.navigate([`${(this._backUrl)}`],{queryParamsHandling:\"preserve\"}).then()\r\n  }\r\n  private getDismissReason(reason: any): string {\r\n    if (reason === ModalDismissReasons.ESC) {\r\n      return 'by pressing ESC';\r\n    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\r\n      return 'by clicking on a backdrop';\r\n    } else {\r\n      return `with: ${reason}`;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ng-template #content let-modal style=\"background-color: red\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\" id=\"modal-basic-title\">{{_headerText}}</h4>\r\n    <!--    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>-->\r\n  </div>\r\n  <div class=\"modal-body\">\r\n    <form>\r\n      <div class=\"mb-3\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n<!--    <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click');_back()\">Save</button>-->\r\n  </div>\r\n</ng-template>\r\n\r\n<button class=\"btn btn-lg btn-outline-primary\" (click)=\"open(content)\">{{_description}}</button>\r\n","import {Component, Input, OnInit} from '@angular/core';\r\nimport {Observable, Subject, Subscription} from \"rxjs\";\r\nimport {debounceTime} from \"rxjs\";\r\nimport {IResponse} from \"../../models/IResponse\";\r\nimport {IUser_Object} from \"../../models/IUser_Object\";\r\nimport {UserService} from \"../../services/user.service\";\r\nimport {IUser} from \"../../models\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {Form, FormControl, FormGroup} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.css'],\r\n  host: {\r\n    class: 'display-contents'\r\n  }\r\n})\r\nexport class SearchBarComponent implements OnInit {\r\n\r\n\r\n  private inputChanged: Subject<IUser_Object[]> = new Subject<IUser_Object[]>()\r\n  private subscription: Subscription;\r\n\r\n  _searchBar:FormGroup;\r\n  _debounceTime = 1000\r\n  _bar_info: string = ''\r\n  _rData: IUser_Object[]\r\n\r\n  constructor(\r\n    private UserService: UserService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this._creatSearchBarForm()\r\n\r\n    this.subscription = this.inputChanged\r\n      .pipe(\r\n        debounceTime(this._debounceTime)\r\n      )\r\n      .subscribe(() => {\r\n        this.getBarInfo()\r\n      })\r\n  }\r\n\r\n  inputInfoAdded(): void {\r\n    this.inputChanged.next(this._rData)\r\n  }\r\n\r\n  getBarInfo() {\r\n    this.UserService.getUsersIdPairs().subscribe(value => {\r\n      console.log(value.results)\r\n      this._rData = value.results\r\n    })\r\n  }\r\n\r\n  _creatSearchBarForm(): void {\r\n    this._searchBar = new FormGroup({\r\n      search_bar_input: new FormControl('ore.kitto@gmail.com'),\r\n    })\r\n  }\r\n\r\n\r\n  //Change input value to needed\r\n  _chooseUser(){\r\n    this._searchBar.controls['search_bar_input'].setValue('me')\r\n  }\r\n\r\n}\r\n\r\n","<form class=\"form\" [formGroup]=\"_searchBar\">\r\n  <div class=\"row\">\r\n    <div class=\"col\">\r\n      <div ngbDropdown class=\"d-inline-block w-100\">\r\n        <input type=\"text\"\r\n               [(ngModel)]=\"_bar_info\"\r\n               name=\"search-bar-input\"\r\n               placeholder=\"Search for users\"\r\n               class=\"rounded-2 w-100\"\r\n               id=\"dropdownBasic1\"\r\n               (keyup)=\"inputInfoAdded()\"\r\n               formControlName=\"search_bar_input\"\r\n               ngbDropdownToggle\r\n               >\r\n        <ul ngbDropdownMenu>\r\n<!--          <li  (click)=\"_chooseUser()\" ngbDropdownItem>Action - 1</li>-->\r\n          <li ngbDropdownItem>Another Action</li>\r\n          <li ngbDropdownItem>Something else is here</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\n// import {SignUpService} from \"../../services/sign-up.service\";\n// import {Router} from \"@angular/router\";\nimport {FormControl, FormGroup} from \"@angular/forms\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  signUp:FormGroup\n\n  constructor(\n    // private SignUpService:SignUpService,\n    // private Router: Router,\n  ) { }\n\n  ngOnInit(): void {\n    this._createSignUpForm()\n  }\n\n  _createSignUpForm(): void {\n    this.signUp = new FormGroup({\n      email: new FormControl('ore.kitto@gmail.com'),\n      password: new FormControl('BigTown2033'),\n      first_name: new FormControl(),\n      last_name: new FormControl(),\n      phone_number: new FormControl(),\n      age: new FormControl(),\n    })\n  }\n\n  _SignUp(){\n    console.log(this.signUp.getRawValue());\n  }\n\n}\n","<div class=\"container-md text-center align-middle align-items-center\" style=\"height: 80vh\">\n  <div class=\"row justify-content-md-center align-items-center\" style=\"height: 80%\">\n    <form class=\"col col-2\" [formGroup]=\"signUp\" (ngSubmit)=\"_SignUp()\">\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\n        <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" formControlName=\"email\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" formControlName=\"password\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"firstName\" class=\"form-label\">First name</label>\n        <input type=\"password\" class=\"form-control\" id=\"firstName\" formControlName=\"first_name\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"lastName\" class=\"form-label\">Last name</label>\n        <input type=\"password\" class=\"form-control\" id=\"lastName\" formControlName=\"last_name\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"age\" class=\"form-label\">Age</label>\n        <input type=\"password\" class=\"form-control\" id=\"age\" formControlName=\"age\">\n      </div>\n      <div class=\"mb-3 no-select\">\n        <label for=\"phoneNumber\" class=\"form-label\">Phone number</label>\n        <input type=\"password\" class=\"form-control\" id=\"phoneNumber\" formControlName=\"phone_number\">\n      </div>\n      <button type=\"submit\" class =\"btn btn-primary align-self-auto\">Submit</button>\n    </form>\n  </div>\n<!--  <div class=\"row no-select\" style=\"height: 10%\">-->\n<!--    <p *ngIf=\"errMsg\">{{errMsg}}</p>-->\n<!--  </div>-->\n</div>\n","import {environment} from \"../../environments/environment\";\r\n\r\n\r\nconst {URL} = environment;\r\n\r\n\r\nexport const base_urls = {\r\n  login: `${URL}/auth/token`,\r\n  refresh: `${URL}/auth/refresh`,\r\n  users: `${URL}/users`,\r\n  signIn: `${URL}/users/add_user`,\r\n}\r\n\r\nexport const doctors_urls = {\r\n  allDoctors: `${URL}/users/doctors`,\r\n  doctorById: `${URL}/users/doctors`,\r\n  doctorsIdPairs: `${URL}/users/doctors_with_id`,\r\n  doctorsWithListOfPatients: `${URL}/users/doctors_and_patients`,\r\n  deleteUserFromDoctor:`${URL}/users/delete_from_doctors`,\r\n  addUserToDoctors:`${URL}/users/add_to_doctors`,\r\n  addPatientToDoctor:`${URL}/users/add_patient_to_doctor`,\r\n}\r\nexport const user_urls = {\r\n  getUserById: `${URL}/users`,\r\n  getUsersIdPairs: `${URL}/users/users_with_id`,\r\n}\r\n","export const base_constants = {\r\n  page_size: 5\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable, tap} from \"rxjs\";\nimport {IAccessTokenInterface} from \"../models\";\nimport {base_urls} from \"../constants/base_urls\";\nimport {IUser} from \"../models\";\nimport {TokenStorageService} from \"./token-storage.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  ACCESS_TOKEN = 'auth-token'\n\n  // REFRESH_TOKEN = 'refresh-token'\n\n  constructor(\n    private httpClient: HttpClient,\n    private tokenStorage: TokenStorageService,\n  ) {\n  }\n\n\n\n  login(user: IUser): Observable<IAccessTokenInterface> {\n    return this.httpClient.post<IAccessTokenInterface>(`${base_urls.login}`, user)\n  }\n\n  register(credentials: {}): Observable<any> {\n    return this.httpClient.post<any>(`${base_urls.users}`, {...credentials})\n  }\n\n  refreshToken(): Observable<IAccessTokenInterface> {\n    const refresh = this.tokenStorage.getRefreshToken();\n    return this.httpClient.post<IAccessTokenInterface>(`${base_urls.login}/refresh`, {refresh}).pipe(\n      tap((tokens: IAccessTokenInterface) => {\n        this.tokenStorage.saveTokens(tokens)\n      })\n    )\n  }\n\n  isAuthorization(): boolean {\n    return !!window.sessionStorage.getItem(this.ACCESS_TOKEN)\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {IUser_Object} from '../models/IUser_Object';\r\nimport {doctors_urls} from \"../constants/base_urls\";\r\nimport {BehaviorSubject, Observable} from \"rxjs\";\r\nimport {DoctorWithIdPairs} from \"../models/DoctorWithIdPairs\";\r\nimport {IPaginated_obj} from \"../models/IPaginated_obj\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorsService {\r\n\r\n  constructor(\r\n    private HttpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  deleteDoctorNum: BehaviorSubject<number> = new BehaviorSubject(0)\r\n  docInfo: BehaviorSubject<Partial<IUser_Object>> = new BehaviorSubject<Partial<IUser_Object>>({})\r\n\r\n  getAllDoctors(page_size: number = 5): Observable<IPaginated_obj<IUser_Object[]>> {\r\n    return this.HttpClient.get<IPaginated_obj<IUser_Object[]>>(`${doctors_urls.allDoctors}`, {params: {page_size: page_size}})\r\n  }\r\n\r\n  getDoctorByID(id: number): Observable<IPaginated_obj<IUser_Object[]>> {\r\n    return this.HttpClient.get<IPaginated_obj<IUser_Object[]>>(`${doctors_urls.doctorById}/${id}`)\r\n  }\r\n\r\n  doctorsWithIdPairs(): Observable<DoctorWithIdPairs[]> {\r\n    return this.HttpClient.get<DoctorWithIdPairs[]>(`${doctors_urls.doctorsIdPairs}`)\r\n  }\r\n\r\n  doctorsWithPatients(): Observable<any> {\r\n    return this.HttpClient.get(`${doctors_urls.doctorsWithListOfPatients}`)\r\n  }\r\n\r\n  addPatientToDoctor(PatientId: string): Observable<any> {\r\n    return this.HttpClient.post(`${doctors_urls.addPatientToDoctor}`, PatientId)\r\n  }\r\n\r\n  addToDoctors(UserId: string):Observable<IPaginated_obj<IUser_Object>> {\r\n    let userObj = {user_id:parseInt(UserId)}\r\n    return this.HttpClient.post<IPaginated_obj<IUser_Object>>(`${doctors_urls.addUserToDoctors}`, userObj)\r\n  }\r\n\r\n  deleteDoctorById(id: number) {\r\n    return this.HttpClient.delete(`${doctors_urls.deleteUserFromDoctor}/${id}`)\r\n  }\r\n\r\n\r\n}\r\n","export * from './auth.service'\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor, HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { catchError , Observable, switchMap, throwError} from 'rxjs';\r\nimport {TokenStorageService} from \"../token-storage.service\";\r\nimport {AuthService} from \"../auth.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {IAccessTokenInterface} from \"../../models\";\r\nimport {Is_authenticated} from \"../is_authenticated\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n\r\n  isRefreshing = false\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private tokenStorage: TokenStorageService,\r\n    private router: Router,\r\n    private is_Auth_obs: Is_authenticated\r\n  ) {\r\n  }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    const isAuth = this.authService.isAuthorization()\r\n\r\n    if (isAuth) {\r\n      request = this.addToken(request, this.tokenStorage.getAccessToken())\r\n      this.is_Auth_obs.userIsLogged.next(true)\r\n    }else{\r\n      this.router.navigate(['login']).then()\r\n    }\r\n    return next.handle(request).pipe(\r\n\r\n      catchError((res: HttpErrorResponse) => {\r\n        if (res && res.error && res.status === 401) {\r\n          return this.handle401Error(request, next)\r\n        }\r\n        return throwError(() => {\r\n          new Error('Token is expired')\r\n          this.is_Auth_obs.userIsLogged.next(false)\r\n        })\r\n      })\r\n    ) as any;\r\n  }\r\n\r\n  addToken(request: HttpRequest<any>, token: string): HttpRequest<any> {\r\n    return request.clone({\r\n      setHeaders: {Authorization: `Bearer ${token}`}\r\n    })\r\n  }\r\n\r\n  handle401Error(request: HttpRequest<any>, next: HttpHandler): any {\r\n    if (!this.isRefreshing) {\r\n      this.isRefreshing = true;\r\n      return this.authService.refreshToken().pipe(\r\n        switchMap((tokens: IAccessTokenInterface) => {\r\n          return next.handle(this.addToken(request, tokens.access))\r\n        }),\r\n        catchError(() => {\r\n          this.isRefreshing = false\r\n          this.tokenStorage.signOut();\r\n          this.router.navigate(['login']).then()\r\n          return throwError(() => new Error('token invalid or expired'))\r\n        })\r\n      )\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class Is_authenticated {\n\n  userIsLogged = new BehaviorSubject(false)\n\n  constructor() {\n\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {IAccessTokenInterface} from \"../models\";\nimport {environment} from \"../../environments/environment\";\n\nconst ACCESS_TOKEN = environment.ACCESS_TOKEN\nconst REFRESH_TOKEN = environment.REFRESH_TOKEN\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() {\n  }\n\n  signOut(): void {\n    window.sessionStorage.clear()\n  }\n\n  public saveTokens(token:IAccessTokenInterface):void{\n    window.sessionStorage.removeItem(ACCESS_TOKEN)\n    window.sessionStorage.removeItem(REFRESH_TOKEN)\n    window.sessionStorage.setItem(ACCESS_TOKEN, token.access)\n    window.sessionStorage.setItem(REFRESH_TOKEN, token.refresh)\n  }\n\n  public getAccessToken():string{\n    return window.sessionStorage.getItem(ACCESS_TOKEN) as string\n  }\n  public getRefreshToken():string{\n    return window.sessionStorage.getItem(REFRESH_TOKEN) as string\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {IPaginated_obj} from \"../models/IPaginated_obj\";\r\nimport {IUser_Object} from \"../models/IUser_Object\";\r\nimport {user_urls} from \"../constants/base_urls\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private HttpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getUserByID(id: number): Observable<IPaginated_obj<IUser_Object>> {\r\n    return this.HttpClient.get<IPaginated_obj<IUser_Object>>(`${user_urls.getUserById}/${id}`)\r\n  }\r\n\r\n  getUsersIdPairs(searchingParams:{}={}): Observable<IPaginated_obj<IUser_Object[]>> {\r\n    return this.HttpClient.get<IPaginated_obj<IUser_Object[]>>(`${user_urls.getUsersIdPairs}`, {params:{...searchingParams}})\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  URL: '/api',\n  ACCESS_TOKEN : 'auth-token',\n  REFRESH_TOKEN : 'refresh-token',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}